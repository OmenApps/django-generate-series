name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/checkout@v3
      - run: python -m pip install black
      - run: black -l 119 --check --diff .

  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/checkout@v3
      - run: python -m pip install isort
      - run: isort --profile=black --line-length=119 .

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/checkout@v3
      - run: python -m pip install flake8
      - run: flake8 --max-line-length=119

  test:
    name: tox on ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: postgres
        ports: ['9932:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install initial dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.3.2 tox tox-gh-actions==3.0.0

      - name: Install dev dependencies
        run: poetry install --with dev

      - name: Check versions
        run: |
          python -VV
          python -m site

      - name: Run Migrations
        run: python manage.py migrate

      - name: Run tox
        run: python -m tox
